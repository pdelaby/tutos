pipeline {
    agent any
    tools {
        maven 'M3' 
        jdk 'jdk8u125'
    }
	
    stages { 
             
		stage('Env') {
			steps{
				configFileProvider([configFile(fileId:'apache-conf', variable: 'apacheConfFile')]) {
					script{
						def apacheConf = readJSON(text: readFile(file: apacheConfFile))
						env.publicApacheHtml = "$apacheConf.publichtml.path"
					}
				}
			}
		}
		
		stage('Checkout'){
			steps{
				git 'https://github.com/asciidoctor/asciidoctor-maven-examples.git'
			}
		}
  
        stage('generate-resources'){
            steps{
				dir('asciidoc-to-html-example') {
					sh "mvn generate-resources"
				}
			}
        }
        
        stage('publish'){
			parallel {
				stage('Deploy asciidoc'){
					steps{
						dir('asciidoc-to-html-example') {
							sh "mkdir -p ${env.publicApacheHtml}/ascii-to-html"
							sh "cp -R target/generated-docs/* ${env.publicApacheHtml}/ascii-to-html"
						}
					}
				}
								
				stage('Publish asciidoc'){
					steps{
						dir('asciidoc-to-html-example') {
							publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: true, reportDir: 'target/generated-docs', reportFiles: 'example-manual.html', reportName: 'AsciiDoc', reportTitles: 'documentation'])
						}
					}
				}
					
            }
        }
		
    }
   
}